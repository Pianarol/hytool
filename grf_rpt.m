function grf_rpt( p, t, s, d, ttle )%GRF_RPT - Produces the final figure and results for the Barker model %                % Syntax: grf_rpt( p, t, s, d, ttle )%%   p = parameters of the model%   p(1) = a  = slope of the straight line%   p(2) = t0 = intercept with the horizontal axis for s = 0%   p(3) = n = intercept with the horizontal axis for s = 0%   t = measured time%   s = measured drawdown%   d(1) = q = Pumping rate%   d(2) = e = thickness of the aquifer %   ttle = Title of the figure %% Description:%   Produces the final figure and results for Barker model (1988).%% See also: grf_dmo, grf_dim, grf_gss, grf_pre%global GRFRADIUS GRFWELLRADIUS GRFWELLDIMENSIONLESSRADIUSif(  GRFRADIUS == [] ) % NE MARCHE PAS - TROUVER UNE SOLUTION !    disp(' ERROR: grf_rpt: You must run GRF_PRE before using the grf model')    p=[];    return;endclfif(nargin==4) % Default value for d if not given by user  ttle='Interference test';end% Rename the parameters for a more intuitive check of the formulasa=p(1); t0=p(2); n=p(3); q=d(1); r=GRFRADIUS;rw=GRFWELLRADIUS; % Compute the transmissivity, storativityTn=log(10)*q/4/pi/a; % Equivalent Cylindrical TransmissivitySn=2.2458394.*Tn*t0/rw.^2;% Calls an internal script that computes drawdown, derivative, and residualsfunc='grf'; rpt_cmp% Defines the text of the left side of the legend lgdl=char('Test data:');lgdl=char(lgdl, sprintf(' Discharge rate: %3.2e m^3/s',q));lgdl=char(lgdl, sprintf(' Well radius rw:  %0.2g m',rw));lgdl=char(lgdl, sprintf(' Radial distance: %0.2g m',r));lgdl=char(lgdl, ' ');lgdl=char(lgdl, 'Hydraulic parameters:');lgdl=char(lgdl, sprintf(' Flow dimension n: %0.2g',n));lgdl=char(lgdl, sprintf(' Equivalent transmissivity Tn: %2.1e m2/s',Tn));lgdl=char(lgdl, sprintf(' Equivalent storativity Sn: %2.1e',Sn));% Defines the text of the right side of the legend lgdr=char('Barker (1975) Model');lgdr=char(lgdr, ' ');lgdr=char(lgdr, 'Fitting parameters:');lgdr=char(lgdr, sprintf(' slope a: %0.2g m',a));lgdr=char(lgdr, sprintf(' intercept t0: %0.2g m',t0));lgdr=char(lgdr, sprintf(' mean residual: %0.2g m',mr));lgdr=char(lgdr, sprintf(' 2 standard deviation: %0.2g m',sr));% Calls an internal script that place the legendrpt_lgd% Calls an internal script that plot the model and the datarpt_plt