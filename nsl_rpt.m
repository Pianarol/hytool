function nsl_rpt( p, t, s, d, ttle )%NSL_RPT - Produces the final figure and results for the Neuzil model%                % Syntax: nsl_rpt( p, t, s, d, ttle )%%   p = parameters of the Neuzil model%   t = measured time%   s = relative drawdown, s  = (h - h0)/(hi - h0)%       h  = measured head%       h0 = equilibrium head  %       hi = initial head after test begin%   d(1) = Ceff = effective Compressibility of test section%   d(2) = Vs = Volume of the test section%   d(3) = rw = Radius of well screen%   ttle = Title of the figure %% Description:%   Produces the final figure and results for the Neuzil model     %% See also: nsl_dmo, nsl_dim, nsl_gssclfif(nargin==4) % Default value for d if not given by user  ttle='Pulse test';end% Rename the parameters for a more intuitive check of the formulasCeff=d(1); Vs=d(2); rw=d(3);cd=p(1); t0=p(2); rho=1000;g=9.80;% Compute the transmissivity and storativity%rc=sqrt(Vs/pi*Ceff*rho*g)%T=rc^2/2/t0;Sw=Vs*Ceff*rho*g;T=0.5*Sw/(t0*pi);S=0.5*Sw/(cd*pi*rw^2);% Compute the radius of investigation according to Guyonnet et al. (1993)n=0.462;m=0.495;xlim=2.5;tdl=cd.*t(end)./t0;x=tdl.^n./cd.^m;if x<xlim    rdi=rw.*3.54.*tdl.^n;else    rdi=rw.*8.37.*cd.^m;end% Calls an internal script that computes drawdown, derivative, and residualsfunc='nsl'; rpt_cmp% Defines the text of the left side of the legend lgdl=char('Test data:');lgdl=char(lgdl, sprintf(' Effective Compressibility: %0.2g Pa^{-1}',Ceff));lgdl=char(lgdl, sprintf(' Volume of test section: %0.2g m^{3}',Vs));lgdl=char(lgdl, ' ');lgdl=char(lgdl, 'Hydraulic parameters:');lgdl=char(lgdl, sprintf(' Transmissivity T: %3.1e m^2/s',T));%lgdl=char(lgdl, sprintf(' Storativity S: %3.1e',S));lgdl=char(lgdl, sprintf(' Well bore storage Sw: %3.1e m^2',Sw));%lgdl=char(lgdl, sprintf(' Radius of investigation:: %0.2g m',rdi));% Defines the text of the right side of the legend lgdr=char('Cooper-Bredehoeft-Papadopulos-Neuzil (1982) Model');lgdr=char(lgdr, ' ');lgdr=char(lgdr, 'Fitting parameters:');lgdr=char(lgdr, sprintf(' C_D: %0.2g',cd));lgdr=char(lgdr, sprintf(' t_0: %0.2g s',t0));lgdr=char(lgdr, sprintf(' mean residual: %0.2g',mr));lgdr=char(lgdr, sprintf(' 2 standard deviation: %0.2g',sr));% Calls an internal script that places the legendrpt_lgd_slug% Calls an internal script that plots the model and the datarpt_llt_slugylabel('Normalized drawdown [-]')